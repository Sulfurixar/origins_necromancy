plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
	id 'java-library'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	mavenCentral()

    maven {
        name = "Ladysnake Mods"
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }

	maven {
		name = "Fastutil"
		url = "https://mvnrepository.com/artifact/it.unimi.dsi/fastutil"

	}

	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi fabricApi.module("fabric-api-base", project.fabric_version)
    modImplementation fabricApi.module("fabric-networking-api-v1", project.fabric_version)

	modImplementation 'it.unimi.dsi:fastutil:8.5.8'
	include 'it.unimi.dsi:fastutil:8.5.8'

	// luckperms
	modImplementation "me.lucko:fabric-permissions-api:0.1-SNAPSHOT"
	modApi 	"me.lucko:fabric-permissions-api:0.1-SNAPSHOT"
	include	"me.lucko:fabric-permissions-api:0.1-SNAPSHOT"

	compileOnly "com.demonwav.mcdev:annotations:1.0"
	compileOnly "org.jetbrains:annotations:19.0.0"
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"

	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_components}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cardinal_components}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cardinal_components}"

	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components}"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_components}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cardinal_components}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cardinal_components}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
	toolchain {
        languageVersion.set(JavaLanguageVersion.of(16))
    }
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
